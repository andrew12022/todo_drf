# Generated by Django 5.2 on 2025-04-14 18:28

import re

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.tasks.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Укажите название (максимум 150 символов)', max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Укажите уникальный идентификатор URL (только латинские буквы, цифры, дефисы и подчёркивания)', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='URL-идентификатор')),
                ('owner', models.ForeignKey(help_text='Пользователь, которому принадлежит этот объект', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'объект "Категория"',
                'verbose_name_plural': 'Категории',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Укажите название (максимум 150 символов)', max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Укажите уникальный идентификатор URL (только латинские буквы, цифры, дефисы и подчёркивания)', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='URL-идентификатор')),
                ('owner', models.ForeignKey(help_text='Пользователь, которому принадлежит этот объект', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'объект "Тег"',
                'verbose_name_plural': 'Теги',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Укажите название (максимум 150 символов)', max_length=150, verbose_name='Название')),
                ('slug', models.SlugField(help_text='Укажите уникальный идентификатор URL (только латинские буквы, цифры, дефисы и подчёркивания)', max_length=150, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='URL-идентификатор')),
                ('description', models.TextField(blank=True, help_text='Подробное описание задачи (необязательно)', null=True, verbose_name='Описание')),
                ('is_done', models.BooleanField(default=False, help_text='Отметьте, если задача выполнена', verbose_name='Выполнено')),
                ('deadline', models.DateField(blank=True, help_text='Укажите дату выполнения в формате ГГГГ-ММ-ДД (необязательно)', null=True, validators=[apps.tasks.validators.validate_deadline], verbose_name='Срок выполнения')),
                ('priority', models.CharField(choices=[('LW', 'Низкий'), ('MD', 'Средний'), ('HG', 'Высокий')], db_index=True, default='LW', help_text='Выберите приоритет выполнения задачи', max_length=2, verbose_name='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
                ('category', models.ForeignKey(blank=True, help_text='Выберите категорию для задачи (необязательно)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.category', verbose_name='Категория')),
                ('owner', models.ForeignKey(help_text='Пользователь, которому принадлежит этот объект', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owned', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('tags', models.ManyToManyField(blank=True, help_text='Выберите теги для задачи (необязательно)', related_name='tasks', to='tasks.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'объект "Задача"',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('title', 'owner'), name='category_unique_title_owner', violation_error_message='Название уже занято'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('slug', 'owner'), name='category_unique_slug_owner', violation_error_message='Идентификатор URL уже занят'),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('title', 'owner'), name='tag_unique_title_owner', violation_error_message='Название уже занято'),
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('slug', 'owner'), name='tag_unique_slug_owner', violation_error_message='Идентификатор URL уже занят'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('title', 'owner'), name='task_unique_title_owner', violation_error_message='Название уже занято'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.UniqueConstraint(fields=('slug', 'owner'), name='task_unique_slug_owner', violation_error_message='Идентификатор URL уже занят'),
        ),
    ]
